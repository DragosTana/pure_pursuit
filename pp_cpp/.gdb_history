break PurePursuit::next_in_path()
run
s
skip
s
list
layout
 p
p this
s
skip
s
print segment.start.x segment.start.y
print segment.start.x
print segment.start.y
print segment_goal
s
skip
s
skip
n
p solutions
n
p intersects
q
 break Point::segment_intersections
break PurePursuit::segment_intersections(Segment const&) const
run
print
list
display
n
print x1_off
n
print x1_off
print y1_off
print x2_off
print y2_off
print dx
print dy
n
p discriminant
n
p discriminant
n
p sol1
p sol2
p sol_x1
p sol_x2
p position.x
exit
break PurePursuit::segment_intersections(Segment const&) const
run
n
break PurePursuit::wee_wee_path()
run
stepi
n
quit
break PurePursuit::wee_wee_move(Point const&)
run
n
s
n
s
n
print segment
s
n
print discriminant
n
print solutions
print this->position
n
print sol_x1 sol_x2 sol_y1 sol_y2
print sol_x1, sol_x2, sol_y1, sol_y2
print sol_x1
print sol_x2
print sol_y2
print sol_x2
n
sol1
print sol1
print sol2
print this->position
print seg
n
solutions
print solutions
s
n
s
n
print segment_goal
print this->position
print this->position.distance(segment_goal);
print this->position.distance(segment_goal)
print 1+1
print next_ind(10)
print segment.point_in_rect(this->position)
print segment_goal.distance_square(position)
s
print p.x
print p.y
n
q
